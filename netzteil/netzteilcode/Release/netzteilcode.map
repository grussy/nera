Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_mulsi3.o)
                              ./adc.o (__mulsi3)
/usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_divmodsi4.o)
                              ./adc.o (__divmodsi4)
/usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/crtm32.o (exit)
/usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_copy_data.o)
                              ./adc.o (__do_copy_data)
/usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_clear_bss.o)
                              ./adc.o (__do_clear_bss)
/usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_udivmodsi4.o)
                              /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_divmodsi4.o) (__udivmodsi4)
/usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(atoi.o)
                              ./commands.o (atoi)
/usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strcmp.o)
                              ./commands.o (strcmp)
/usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(mul10.o)
                              /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(atoi.o) (__mulhi_const_10)
/usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(sprintf.o)
                              ./main.o (sprintf)
/usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(vfprintf_std.o)
                              /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(sprintf.o) (vfprintf)
/usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strnlen_P.o)
                              /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(vfprintf_std.o) (strnlen_P)
/usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strnlen.o)
                              /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(vfprintf_std.o) (strnlen)
/usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(fputc.o)
                              /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(vfprintf_std.o) (fputc)
/usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
                              /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(vfprintf_std.o) (__ultoa_invert)
/usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_prologue.o)
                              /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(sprintf.o) (__prologue_saves__)
/usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_epilogue.o)
                              /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(sprintf.o) (__epilogue_restores__)

Allocating common symbols
Common symbol       size              file

enc_delta2          0x1               ./drehgeber.o
enc_delta           0x1               ./drehgeber.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/crtm32.o
LOAD ./adc.o
LOAD ./commands.o
LOAD ./drehgeber.o
LOAD ./lcd.o
LOAD ./main.o
LOAD ./segment.o
LOAD ./uart.o
LOAD /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x1326
 *(.vectors)
 .vectors       0x00000000       0x54 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/crtm32.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092      0x368 ./adc.o
                0x0000034e                getadc_Volts
                0x000003bc                getVoltage
                0x0000037c                getadc_Current
                0x000003d2                setCurrent
                0x00000336                getadc_u
                0x000002fa                setdac
                0x00000342                getadc_i
                0x00000318                init_ADC
                0x00000156                __vector_4
                0x000003aa                setVoltage
                0x000003e4                getCurrent
                0x00000092                __vector_16
 .text          0x000003fa      0x178 ./commands.o
                0x000003fa                identify_command
 .text          0x00000572      0x102 ./drehgeber.o
                0x00000648                encode_read2
                0x0000065c                encode_read4
                0x00000572                encode_init
                0x000005b6                __vector_10
                0x0000063a                encode_read1
 .text          0x00000674      0x174 ./lcd.o
                0x00000674                lcd_data
                0x000006fc                lcd_clear
                0x000007a2                set_cursor
                0x00000792                lcd_home
                0x000007ce                lcd_string
                0x000006f0                lcd_enable
                0x0000070c                lcd_init
                0x000006b2                lcd_command
 .text          0x000007e8      0x2ce ./main.o
                0x000007e8                main
 .text          0x00000ab6       0xa6 ./segment.o
                0x00000ab6                segmentDataClk
                0x00000ac8                segmentStorageClk
                0x00000b38                segmentSetNumber
                0x00000b4c                initSegment
                0x00000ada                segmentSetBit
                0x00000af6                segmentSet
 .text          0x00000b5c      0x100 ./uart.o
                0x00000c0e                uart_gets
                0x00000bf2                uart_puts
                0x00000b5c                USART_Init
                0x00000c06                uart_getc
                0x00000be6                uart_putc
 .text          0x00000c5c        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_mulsi3.o)
 .text          0x00000c5c        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_divmodsi4.o)
 .text          0x00000c5c        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_exit.o)
 .text          0x00000c5c        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_copy_data.o)
 .text          0x00000c5c        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_clear_bss.o)
 .text          0x00000c5c        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_udivmodsi4.o)
 .text          0x00000c5c       0x3c /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(atoi.o)
                0x00000c5c                atoi
 .text          0x00000c98       0x12 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strcmp.o)
                0x00000c98                strcmp
 .text          0x00000caa       0x10 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(mul10.o)
                0x00000caa                __mulhi_const_10
 .text          0x00000cba       0x48 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(sprintf.o)
                0x00000cba                sprintf
 .text          0x00000d02      0x3ba /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(vfprintf_std.o)
                0x00000d02                vfprintf
 .text          0x000010bc       0x16 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strnlen_P.o)
                0x000010bc                strnlen_P
 .text          0x000010d2       0x16 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strnlen.o)
                0x000010d2                strnlen
 .text          0x000010e8       0x58 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(fputc.o)
                0x000010e8                fputc
 .text          0x00001140       0xbc /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
                0x00001140                __ultoa_invert
 .text          0x000011fc        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_prologue.o)
 .text          0x000011fc        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_epilogue.o)
                0x000011fc                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000011fc       0x3e /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_mulsi3.o)
                0x000011fc                __mulsi3
 .text.libgcc   0x0000123a       0x36 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_divmodsi4.o)
                0x0000123a                __divmodsi4
 .text.libgcc   0x00001270        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00001270        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00001270        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00001270       0x44 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_udivmodsi4.o)
                0x00001270                __udivmodsi4
 .text.libgcc   0x000012b4       0x38 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_prologue.o)
                0x000012b4                __prologue_saves__
 .text.libgcc   0x000012ec       0x36 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_epilogue.o)
                0x000012ec                __epilogue_restores__
                0x00001322                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001322        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_exit.o)
                0x00001322                exit
                0x00001322                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00001322        0x4 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00001326                _etext = .

.data           0x00800060      0x24e load address 0x00001326
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./adc.o
 .data          0x00800060      0x11a ./commands.o
                0x00800170                segmentsc
 .data          0x0080017a        0x0 ./drehgeber.o
 .data          0x0080017a        0x0 ./lcd.o
 .data          0x0080017a       0x3c ./main.o
 .data          0x008001b6        0xa ./segment.o
                0x008001b6                segments
 .data          0x008001c0       0xee ./uart.o
 .data          0x008002ae        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_mulsi3.o)
 .data          0x008002ae        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_divmodsi4.o)
 .data          0x008002ae        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_exit.o)
 .data          0x008002ae        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_copy_data.o)
 .data          0x008002ae        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_clear_bss.o)
 .data          0x008002ae        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_udivmodsi4.o)
 .data          0x008002ae        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(atoi.o)
 .data          0x008002ae        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strcmp.o)
 .data          0x008002ae        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(mul10.o)
 .data          0x008002ae        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(sprintf.o)
 .data          0x008002ae        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(vfprintf_std.o)
 .data          0x008002ae        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strnlen_P.o)
 .data          0x008002ae        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strnlen.o)
 .data          0x008002ae        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(fputc.o)
 .data          0x008002ae        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
 .data          0x008002ae        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_prologue.o)
 .data          0x008002ae        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_epilogue.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x008002ae                . = ALIGN (0x2)
                0x008002ae                _edata = .
                0x008002ae                PROVIDE (__data_end, .)

.bss            0x008002ae       0x20 load address 0x00001574
                0x008002ae                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008002ae        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/crtm32.o
 .bss           0x008002ae       0x1c ./adc.o
                0x008002c8                countoverflows
                0x008002b4                adc_numbers_u
                0x008002bc                adc_numbers_i
                0x008002ae                adc_u
                0x008002b6                adc_i
                0x008002c0                voltage
                0x008002c4                current
                0x008002b0                adc_middle_u
                0x008002b8                adc_middle_i
                0x008002be                dac
 .bss           0x008002ca        0x0 ./commands.o
 .bss           0x008002ca        0x2 ./drehgeber.o
 .bss           0x008002cc        0x0 ./lcd.o
 .bss           0x008002cc        0x0 ./main.o
 .bss           0x008002cc        0x0 ./segment.o
 .bss           0x008002cc        0x0 ./uart.o
 .bss           0x008002cc        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_mulsi3.o)
 .bss           0x008002cc        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_divmodsi4.o)
 .bss           0x008002cc        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_exit.o)
 .bss           0x008002cc        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_copy_data.o)
 .bss           0x008002cc        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_clear_bss.o)
 .bss           0x008002cc        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_udivmodsi4.o)
 .bss           0x008002cc        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(atoi.o)
 .bss           0x008002cc        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strcmp.o)
 .bss           0x008002cc        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(mul10.o)
 .bss           0x008002cc        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(sprintf.o)
 .bss           0x008002cc        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(vfprintf_std.o)
 .bss           0x008002cc        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strnlen_P.o)
 .bss           0x008002cc        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strnlen.o)
 .bss           0x008002cc        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(fputc.o)
 .bss           0x008002cc        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
 .bss           0x008002cc        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_prologue.o)
 .bss           0x008002cc        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_epilogue.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x008002cc        0x2 ./drehgeber.o
                0x008002cc                enc_delta2
                0x008002cd                enc_delta
                0x008002ce                PROVIDE (__bss_end, .)
                0x00001326                __data_load_start = LOADADDR (.data)
                0x00001574                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008002ce        0x0
                0x008002ce                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008002ce                PROVIDE (__noinit_end, .)
                0x008002ce                _end = .
                0x008002ce                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x1df4
 *(.stab)
 .stab          0x00000000      0x6b4 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/crtm32.o
 .stab          0x000006b4      0x174 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(atoi.o)
                                0x180 (size before relaxing)
 .stab          0x00000828       0x84 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strcmp.o)
                                 0x90 (size before relaxing)
 .stab          0x000008ac       0x78 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(mul10.o)
                                 0x84 (size before relaxing)
 .stab          0x00000924      0x3cc /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(sprintf.o)
                                0x3d8 (size before relaxing)
 .stab          0x00000cf0      0x978 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(vfprintf_std.o)
                                0xb58 (size before relaxing)
 .stab          0x00001668       0x9c /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strnlen_P.o)
                                 0xa8 (size before relaxing)
 .stab          0x00001704       0x9c /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strnlen.o)
                                 0xa8 (size before relaxing)
 .stab          0x000017a0      0x1d4 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(fputc.o)
                                0x3b4 (size before relaxing)
 .stab          0x00001974      0x480 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
                                0x48c (size before relaxing)

.stabstr        0x00000000      0xd29
 *(.stabstr)
 .stabstr       0x00000000      0xd29 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/crtm32.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(netzteilcode.elf elf32-avr)
LOAD linker stubs
