Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_mulsi3.o)
                              ./adc.o (__mulsi3)
/usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_divmodsi4.o)
                              ./adc.o (__divmodsi4)
/usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/crtm32.o (exit)
/usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_copy_data.o)
                              ./adc.o (__do_copy_data)
/usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_clear_bss.o)
                              ./adc.o (__do_clear_bss)
/usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_udivmodsi4.o)
                              /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_divmodsi4.o) (__udivmodsi4)
/usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(atoi.o)
                              ./commands.o (atoi)
/usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strcmp.o)
                              ./commands.o (strcmp)
/usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(mul10.o)
                              /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(atoi.o) (__mulhi_const_10)
/usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(sprintf.o)
                              ./adc.o (sprintf)
/usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(vfprintf_std.o)
                              /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(sprintf.o) (vfprintf)
/usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strnlen_P.o)
                              /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(vfprintf_std.o) (strnlen_P)
/usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strnlen.o)
                              /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(vfprintf_std.o) (strnlen)
/usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(fputc.o)
                              /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(vfprintf_std.o) (fputc)
/usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
                              /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(vfprintf_std.o) (__ultoa_invert)
/usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_prologue.o)
                              /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(sprintf.o) (__prologue_saves__)
/usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_epilogue.o)
                              /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(sprintf.o) (__epilogue_restores__)

Allocating common symbols
Common symbol       size              file

enc_delta           0x1               ./drehgeber.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/crtm32.o
LOAD ./adc.o
LOAD ./commands.o
LOAD ./drehgeber.o
LOAD ./lcd.o
LOAD ./main.o
LOAD ./segment.o
LOAD ./uart.o
LOAD /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x113a
 *(.vectors)
 .vectors       0x00000000       0x54 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/crtm32.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092      0x2e6 ./adc.o
                0x00000164                getadc_Volts
                0x000001a4                getVoltage
                0x00000142                getadc
                0x00000108                setdac
                0x00000126                init_ADC
                0x000001ba                __vector_4
                0x00000192                setVoltage
                0x00000092                __vector_16
                0x0000015a                setadc_ready
                0x0000014e                getadc_ready
 .text          0x00000378      0x178 ./commands.o
                0x00000378                identify_command
 .text          0x000004f0       0x9a ./drehgeber.o
                0x00000576                encode_read2
                0x000004f0                encode_init
                0x0000051a                __vector_10
                0x00000568                encode_read1
 .text          0x0000058a      0x174 ./lcd.o
                0x0000058a                lcd_data
                0x00000612                lcd_clear
                0x000006b8                set_cursor
                0x000006a8                lcd_home
                0x000006e4                lcd_string
                0x00000606                lcd_enable
                0x00000622                lcd_init
                0x000005c8                lcd_command
 .text          0x000006fe      0x1cc ./main.o
                0x000006fe                main
 .text          0x000008ca       0xa6 ./segment.o
                0x000008ca                segmentDataClk
                0x000008dc                segmentStorageClk
                0x0000094c                segmentSetNumber
                0x00000960                initSegment
                0x000008ee                segmentSetBit
                0x0000090a                segmentSet
 .text          0x00000970      0x100 ./uart.o
                0x00000a22                uart_gets
                0x00000a06                uart_puts
                0x00000970                USART_Init
                0x00000a1a                uart_getc
                0x000009fa                uart_putc
 .text          0x00000a70        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_mulsi3.o)
 .text          0x00000a70        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_divmodsi4.o)
 .text          0x00000a70        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_exit.o)
 .text          0x00000a70        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_copy_data.o)
 .text          0x00000a70        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_clear_bss.o)
 .text          0x00000a70        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_udivmodsi4.o)
 .text          0x00000a70       0x3c /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(atoi.o)
                0x00000a70                atoi
 .text          0x00000aac       0x12 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strcmp.o)
                0x00000aac                strcmp
 .text          0x00000abe       0x10 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(mul10.o)
                0x00000abe                __mulhi_const_10
 .text          0x00000ace       0x48 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(sprintf.o)
                0x00000ace                sprintf
 .text          0x00000b16      0x3ba /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(vfprintf_std.o)
                0x00000b16                vfprintf
 .text          0x00000ed0       0x16 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strnlen_P.o)
                0x00000ed0                strnlen_P
 .text          0x00000ee6       0x16 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strnlen.o)
                0x00000ee6                strnlen
 .text          0x00000efc       0x58 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(fputc.o)
                0x00000efc                fputc
 .text          0x00000f54       0xbc /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
                0x00000f54                __ultoa_invert
 .text          0x00001010        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_prologue.o)
 .text          0x00001010        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_epilogue.o)
                0x00001010                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00001010       0x3e /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_mulsi3.o)
                0x00001010                __mulsi3
 .text.libgcc   0x0000104e       0x36 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_divmodsi4.o)
                0x0000104e                __divmodsi4
 .text.libgcc   0x00001084        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00001084        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00001084        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00001084       0x44 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_udivmodsi4.o)
                0x00001084                __udivmodsi4
 .text.libgcc   0x000010c8       0x38 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_prologue.o)
                0x000010c8                __prologue_saves__
 .text.libgcc   0x00001100       0x36 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_epilogue.o)
                0x00001100                __epilogue_restores__
                0x00001136                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001136        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_exit.o)
                0x00001136                exit
                0x00001136                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00001136        0x4 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000113a                _etext = .

.data           0x00800060      0x256 load address 0x0000113a
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x7 ./adc.o
                0x00800065                dac
                0x00800063                adc_ready
 .data          0x00800067      0x11a ./commands.o
                0x00800177                segmentsc
 .data          0x00800181        0x0 ./drehgeber.o
 .data          0x00800181        0x0 ./lcd.o
 .data          0x00800181       0x3c ./main.o
 .data          0x008001bd        0xa ./segment.o
                0x008001bd                segments
 .data          0x008001c7       0xee ./uart.o
 .data          0x008002b5        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_mulsi3.o)
 .data          0x008002b5        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_divmodsi4.o)
 .data          0x008002b5        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_exit.o)
 .data          0x008002b5        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_copy_data.o)
 .data          0x008002b5        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_clear_bss.o)
 .data          0x008002b5        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_udivmodsi4.o)
 .data          0x008002b5        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(atoi.o)
 .data          0x008002b5        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strcmp.o)
 .data          0x008002b5        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(mul10.o)
 .data          0x008002b5        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(sprintf.o)
 .data          0x008002b5        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(vfprintf_std.o)
 .data          0x008002b5        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strnlen_P.o)
 .data          0x008002b5        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strnlen.o)
 .data          0x008002b5        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(fputc.o)
 .data          0x008002b5        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
 .data          0x008002b5        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_prologue.o)
 .data          0x008002b5        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_epilogue.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x008002b6                . = ALIGN (0x2)
 *fill*         0x008002b5        0x1 00
                0x008002b6                _edata = .
                0x008002b6                PROVIDE (__data_end, .)

.bss            0x008002b6       0x10 load address 0x00001390
                0x008002b6                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008002b6        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/crtm32.o
 .bss           0x008002b6        0xe ./adc.o
                0x008002c2                countoverflows
                0x008002b8                adc_middle
                0x008002be                voltage
                0x008002bc                adc_numbers
                0x008002b6                adc
 .bss           0x008002c4        0x0 ./commands.o
 .bss           0x008002c4        0x1 ./drehgeber.o
 .bss           0x008002c5        0x0 ./lcd.o
 .bss           0x008002c5        0x0 ./main.o
 .bss           0x008002c5        0x0 ./segment.o
 .bss           0x008002c5        0x0 ./uart.o
 .bss           0x008002c5        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_mulsi3.o)
 .bss           0x008002c5        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_divmodsi4.o)
 .bss           0x008002c5        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_exit.o)
 .bss           0x008002c5        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_copy_data.o)
 .bss           0x008002c5        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_clear_bss.o)
 .bss           0x008002c5        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_udivmodsi4.o)
 .bss           0x008002c5        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(atoi.o)
 .bss           0x008002c5        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strcmp.o)
 .bss           0x008002c5        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(mul10.o)
 .bss           0x008002c5        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(sprintf.o)
 .bss           0x008002c5        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(vfprintf_std.o)
 .bss           0x008002c5        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strnlen_P.o)
 .bss           0x008002c5        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strnlen.o)
 .bss           0x008002c5        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(fputc.o)
 .bss           0x008002c5        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
 .bss           0x008002c5        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_prologue.o)
 .bss           0x008002c5        0x0 /usr/lib/gcc/avr/4.3.3/avr5/libgcc.a(_epilogue.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x008002c5        0x1 ./drehgeber.o
                0x008002c5                enc_delta
                0x008002c6                PROVIDE (__bss_end, .)
                0x0000113a                __data_load_start = LOADADDR (.data)
                0x00001390                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008002c6        0x0
                0x008002c6                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008002c6                PROVIDE (__noinit_end, .)
                0x008002c6                _end = .
                0x008002c6                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x1df4
 *(.stab)
 .stab          0x00000000      0x6b4 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/crtm32.o
 .stab          0x000006b4      0x174 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(atoi.o)
                                0x180 (size before relaxing)
 .stab          0x00000828       0x84 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strcmp.o)
                                 0x90 (size before relaxing)
 .stab          0x000008ac       0x78 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(mul10.o)
                                 0x84 (size before relaxing)
 .stab          0x00000924      0x3cc /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(sprintf.o)
                                0x3d8 (size before relaxing)
 .stab          0x00000cf0      0x978 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(vfprintf_std.o)
                                0xb58 (size before relaxing)
 .stab          0x00001668       0x9c /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strnlen_P.o)
                                 0xa8 (size before relaxing)
 .stab          0x00001704       0x9c /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(strnlen.o)
                                 0xa8 (size before relaxing)
 .stab          0x000017a0      0x1d4 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(fputc.o)
                                0x3b4 (size before relaxing)
 .stab          0x00001974      0x480 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/libc.a(ultoa_invert.o)
                                0x48c (size before relaxing)

.stabstr        0x00000000      0xd29
 *(.stabstr)
 .stabstr       0x00000000      0xd29 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr5/crtm32.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(netzteilcode.elf elf32-avr)
LOAD linker stubs
